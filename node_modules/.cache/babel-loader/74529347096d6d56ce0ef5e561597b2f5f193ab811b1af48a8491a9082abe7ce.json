{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maple\\\\calorie-tracker\\\\Frontend\\\\src\\\\Pages\\\\Calories.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport DashboardHeader from \"../Components/DashboardHeader\";\nimport { useState } from \"react\";\nimport styles from '../App.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Calories() {\n  _s();\n  const [calories, setCalories] = useState(0);\n  const [goal, setGoal] = useState(2000);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: styles.title,\n      children: \"Calorie Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.progressBarContainer,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.progressBar,\n        style: {\n          width: `${calories / goal * 100}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.calorieInfo,\n      children: [calories, \" / \", goal, \" kcal\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_s(Calories, \"YwQGIcxb680l5H3YBM0rxsJpKfE=\");\n_c = Calories;\nexport default Calories;\nvar _c;\n$RefreshReg$(_c, \"Calories\");","map":{"version":3,"names":["React","DashboardHeader","useState","styles","jsxDEV","_jsxDEV","Calories","_s","calories","setCalories","goal","setGoal","className","container","children","title","fileName","_jsxFileName","lineNumber","columnNumber","progressBarContainer","progressBar","style","width","calorieInfo","_c","$RefreshReg$"],"sources":["C:/Users/maple/calorie-tracker/Frontend/src/Pages/Calories.js"],"sourcesContent":["import React from \"react\";\r\nimport DashboardHeader from \"../Components/DashboardHeader\";\r\n\r\nimport { useState } from \"react\";\r\n\r\nimport styles from '../App.module.css'\r\n\r\nfunction Calories() {\r\n  const [calories, setCalories] = useState(0);\r\n  const [goal, setGoal] = useState(2000);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <h1 className={styles.title}>Calorie Tracker</h1>\r\n      <div className={styles.progressBarContainer}>\r\n        <div \r\n          className={styles.progressBar} \r\n          style={{ width: `${(calories / goal) * 100}%` }}\r\n        ></div>\r\n      </div>\r\n      <p className={styles.calorieInfo}>{calories} / {goal} kcal</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Calories"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,eAAe,MAAM,+BAA+B;AAE3D,SAASC,QAAQ,QAAQ,OAAO;AAEhC,OAAOC,MAAM,MAAM,mBAAmB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEtC,oBACEG,OAAA;IAAKO,SAAS,EAAET,MAAM,CAACU,SAAU;IAAAC,QAAA,gBAC/BT,OAAA;MAAIO,SAAS,EAAET,MAAM,CAACY,KAAM;MAAAD,QAAA,EAAC;IAAe;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjDd,OAAA;MAAKO,SAAS,EAAET,MAAM,CAACiB,oBAAqB;MAAAN,QAAA,eAC1CT,OAAA;QACEO,SAAS,EAAET,MAAM,CAACkB,WAAY;QAC9BC,KAAK,EAAE;UAAEC,KAAK,EAAE,GAAIf,QAAQ,GAAGE,IAAI,GAAI,GAAG;QAAI;MAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eACNd,OAAA;MAAGO,SAAS,EAAET,MAAM,CAACqB,WAAY;MAAAV,QAAA,GAAEN,QAAQ,EAAC,KAAG,EAACE,IAAI,EAAC,OAAK;IAAA;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3D,CAAC;AAEV;AAACZ,EAAA,CAhBQD,QAAQ;AAAAmB,EAAA,GAARnB,QAAQ;AAkBjB,eAAeA,QAAQ;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}