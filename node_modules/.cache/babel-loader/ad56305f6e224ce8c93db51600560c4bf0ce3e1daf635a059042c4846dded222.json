{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maple\\\\calorie-tracker\\\\Frontend\\\\src\\\\Components\\\\Calendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport styles from \"../App.module.css\"; // Import your CSS Module\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Calendar = () => {\n  _s();\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const getDaysInMonth = (year, month) => {\n    return new Date(year, month + 1, 0).getDate();\n  };\n  const getFirstDayOfMonth = (year, month) => {\n    return new Date(year, month, 1).getDay();\n  };\n  const handlePreviousMonth = () => {\n    setCurrentDate(new Date(currentDate.getFullYear(), currentDate.getMonth() - 1, 1));\n  };\n  const handleNextMonth = () => {\n    setCurrentDate(new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 1));\n  };\n  const year = currentDate.getFullYear();\n  const month = currentDate.getMonth();\n  const daysInMonth = getDaysInMonth(year, month);\n  const firstDay = getFirstDayOfMonth(year, month);\n  const renderDays = () => {\n    const days = [];\n    // Empty cells before the first day\n    for (let i = 0; i < firstDay; i++) {\n      days.push(/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.empty\n      }, `empty-${i}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this));\n    }\n\n    // Actual days\n    for (let day = 1; day <= daysInMonth; day++) {\n      // Add color-coded classes for specific states\n      let colorClass = \"\";\n      if (day % 5 === 0) colorClass = styles.green; // Example condition\n      else if (day % 7 === 0) colorClass = styles.red; // Example condition\n\n      days.push(/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles.day} ${colorClass}`,\n        children: day\n      }, day, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this));\n    }\n    return days;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.calendar,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.header,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePreviousMonth,\n        className: styles.navButton,\n        children: \"<\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.title,\n        children: [currentDate.toLocaleString(\"default\", {\n          month: \"long\"\n        }), \" \", year]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextMonth,\n        className: styles.navButton,\n        children: \">\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.daysGrid,\n      children: renderDays()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.bottomContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.daysContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Days Missed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"21 Days\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.bottomContainer2,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Percent of days green\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(Calendar, \"jlRD8Xn8VFdQnzpYmYXrLX8M9Sw=\");\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","styles","jsxDEV","_jsxDEV","Calendar","_s","currentDate","setCurrentDate","Date","getDaysInMonth","year","month","getDate","getFirstDayOfMonth","getDay","handlePreviousMonth","getFullYear","getMonth","handleNextMonth","daysInMonth","firstDay","renderDays","days","i","push","className","empty","fileName","_jsxFileName","lineNumber","columnNumber","day","colorClass","green","red","children","calendar","header","onClick","navButton","title","toLocaleString","daysGrid","bottomContainer","daysContainer","bottomContainer2","_c","$RefreshReg$"],"sources":["C:/Users/maple/calorie-tracker/Frontend/src/Components/Calendar.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport styles from \"../App.module.css\"; // Import your CSS Module\r\n\r\nconst Calendar = () => {\r\n  const [currentDate, setCurrentDate] = useState(new Date());\r\n\r\n  const getDaysInMonth = (year, month) => {\r\n    return new Date(year, month + 1, 0).getDate();\r\n  };\r\n\r\n  const getFirstDayOfMonth = (year, month) => {\r\n    return new Date(year, month, 1).getDay();\r\n  };\r\n\r\n  const handlePreviousMonth = () => {\r\n    setCurrentDate(\r\n      new Date(currentDate.getFullYear(), currentDate.getMonth() - 1, 1)\r\n    );\r\n  };\r\n\r\n  const handleNextMonth = () => {\r\n    setCurrentDate(\r\n      new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 1)\r\n    );\r\n  };\r\n\r\n  const year = currentDate.getFullYear();\r\n  const month = currentDate.getMonth();\r\n  const daysInMonth = getDaysInMonth(year, month);\r\n  const firstDay = getFirstDayOfMonth(year, month);\r\n\r\n  const renderDays = () => {\r\n    const days = [];\r\n    // Empty cells before the first day\r\n    for (let i = 0; i < firstDay; i++) {\r\n      days.push(\r\n        <div key={`empty-${i}`} className={styles.empty}></div>\r\n      );\r\n    }\r\n\r\n    // Actual days\r\n    for (let day = 1; day <= daysInMonth; day++) {\r\n      // Add color-coded classes for specific states\r\n      let colorClass = \"\";\r\n      if (day % 5 === 0) colorClass = styles.green; // Example condition\r\n      else if (day % 7 === 0) colorClass = styles.red; // Example condition\r\n\r\n      days.push(\r\n        <div key={day} className={`${styles.day} ${colorClass}`}>\r\n          {day}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return days;\r\n  };\r\n\r\n  return (\r\n    <div className={styles.calendar}>\r\n      <div className={styles.header}>\r\n        <button onClick={handlePreviousMonth} className={styles.navButton}>\r\n          {\"<\"}\r\n        </button>\r\n        <span className={styles.title}>\r\n          {currentDate.toLocaleString(\"default\", { month: \"long\" })} {year}\r\n        </span>\r\n        <button onClick={handleNextMonth} className={styles.navButton}>\r\n          {\">\"}\r\n        </button>\r\n      </div>\r\n      <div className={styles.daysGrid}>{renderDays()}</div>\r\n      <div className= {styles.bottomContainer}>\r\n        <div className= {styles.daysContainer}>\r\n        <h1>Days Missed</h1>\r\n        <p>21 Days</p>\r\n     </div>\r\n     <div className= {styles.bottomContainer2}>\r\n      <h1>Percent of days green</h1>\r\n      <p>%</p>\r\n     </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}